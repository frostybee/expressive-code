name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    if: github.repository_owner == 'expressive-code'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      
      - name: Setup PNPM
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Check for unreleased changesets
        id: has-changesets
        uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3.0.0
        with:
          files: ".changeset/!(README).md"
      
      # If there are unreleased changesets, validate the project before creating the changesets PR
      - name: Require build, test and lint to pass
        if: steps.has-changesets.outputs.files_exists == 'true'
        run: |
          pnpm build
          pnpm test
          pnpm lint
      
      # Run changesets action either if there are unreleased changesets (= a PR must be created)
      # or if the commit message matches the release PR (= new versions must be published to NPM)
      - name: Create changesets PR or publish to NPM
        id: changesets
        if: steps.has-changesets.outputs.files_exists == 'true' || startsWith(github.event.head_commit.message, '[CI] Release')
        uses: changesets/action@e0145edc7d9d8679003495b11f87bd8ef63c0cba # v1.5.3
        with:
          title: '[CI] Release'
          commit: '[CI] Release'
          version: 'pnpm ci-version'
          publish: 'pnpm ci-publish'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
